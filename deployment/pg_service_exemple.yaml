# connect to the google gke project and connect do the enviroment then execute: 
# kubectl apply -f .\pg_service.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
  storageClassName: standard-rwo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-deployment
spec:
  selector:
    matchLabels:
      app: pg
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: pg
    spec:
      containers:
      - name: pg
        image: postgres
        env:
          - name: POSTGRES_USER
            value: #
          - name: POSTGRES_PASSWORD
            value: #
          - name: POSTGRES_DB
            value: collabudget_db
          - name: PGDATA
            value: /var/lib/postgresql/data/db/
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-volume
          subPath: db
      volumes:
      - name: db-volume
        persistentVolumeClaim:
          claimName: pg-data
---
apiVersion: v1
kind: Service
metadata:
  name: pg-service
spec:
  type: LoadBalancer
  #loadBalancerIP: 34.30.247.67
  ports:
  - name: pg-network
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: pg